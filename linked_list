#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    node *next;
};

class lista
{
    private:
    	node  *tail;
    public:
    	node *head;
	    list(){
	      head = NULL;
	      tail = NULL;
	    }
	    void create(int value){
	      	node *temp = new node;
	      	temp->data = value;
	      	temp->next = NULL;
	      	if(head == NULL){
	        	head = temp;
	        	tail = temp;
	        	temp = NULL;
	      	}
	      	else {	
	        	tail->next = temp;
	        	tail = temp;
	      	}
	    }
	    void display(){
		    node *temp = new node;
		    temp = head;
		    while(temp!=NULL){
		      cout<<temp->data<<"\t";
		      temp = temp->next;
		    }
		  }
		void insert_start(int value){
			node *temp = new node;
		    temp->data = value;
		    temp->next = head;
		    head = temp;
		}
		void insert_position(int pos, int value)
  		{
    		node *pre = new node;
		    node *cur = new node;
		    node *temp = new node;
		    cur = head;
		    for(int i=1;i<pos;i++)
		    {
		      pre = cur;
		      cur = cur->next;
		    }
		    temp->data = value;
		    pre->next = temp;	
		    temp->next = cur;
		}
		void delete_position(int pos)
  		{
    		node *current = new node;
    		node *previous = new node;
    		current = head;
		    for(int i=1;i<pos;i++)
		    {
		      previous = current;
		      current = current->next;
		    }
    		previous->next=current->next;
    	}
    	node* removeNthFromEnd(int n) {
        int len = 0;
        node *current = new node;
        node *previous = new node;

        current = this->head;
        while(current != NULL){
            len++;
            current = current->next;
        }
        if(len == 1){
            return NULL;
        }
        else if(n==len){
            return this->head->next;
        }
        else{
            len = len - n;
            node *current2 = new node;
            node *previous2 = new node;
            current2 = this->head;
            for(int i=1;i<=len;i++){
                previous2 = current2;
                current2 = current2->next;
            }
            previous2->next = current2->next;
            return this->head;
        }   
    }
  		
};

int main(){
	int len = 5, n;
	int array[] = {1,2,3,4,5};
	lista *temp = new lista();
	
	
	for(int i=0;i<len;i++){
		temp->create(array[i]);	
		//l->insert_start(array[i]);
	}
	scanf("%d",&n);
	
	node *new_head = temp->removeNthFromEnd(n);
	lista *l = new lista();
	l->head = new_head;
	l->display();
	return 0;
}
